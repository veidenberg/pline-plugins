{
  program: "bwa mem",
  name: "BWA-MEM",
  desc: "map low-divergent sequences against a large reference genome",
  info: "Align 70bp-1Mbp query sequences with the BWA-MEM algorithm. Briefly, the algorithm works by seeding alignments with maximal exact matches (MEMs) and then extending seeds with the affine-gap Smith-Waterman algorithm (SW).",
  url: "http://bio-bwa.sourceforge.net",
	jobName: "read mapping",
	stdout: "readsFile.rootname + .sam",
	category: "NGS",
  options: [
	{line: [
		{file: "", name: "refFile", title: "Reference sequence", required: true, order: "end"},
		{info: "If mates.fq (the read mates file) is absent and option -p (smart pairing) is not set, this command regards input reads are single-end. If mates.fq is present, this command assumes the i-th read in reads.fq and the i-th read in mates.fq constitute a read pair. If -p is used, the command assumes the 2i-th and the (2i+1)-th read in reads.fq (the short reads file) constitute a read pair (such input file is said to be interleaved). In this case, mates.fq is ignored. In the paired-end mode, the mem command will infer the read orientation and the insert size distribution from a batch of reads."}
	]},
	{file: "", name: "readsFile", title: "Short reads", desc:"FASTA/FASTQ format. Supply mate reads in a separate file.", required: true, order: "end"},
	{file: "", name: "matesFile", title: "Read mates", desc:"FASTA/FASTQ format.", enable: "readsFile and no p", order: "end"},
	{group: "Algorithm options", options: [
		{group: "Seed parameters", options:[
			{line: [
				{int: "k", title: "minimum seed length", desc: "Matches shorter than INT will be missed.", default:[{"x is pacbio":17}, {"x is ont2d":14}, 19]},
				{float: "r", title: "internal seed length", desc: "Trigger re-seeding for a MEM longer than minSeedLen*FLOAT. This is a key heuristic parameter for tuning the performance. Larger value yields fewer seeds, which leads to faster alignment speed but lower accuracy.", 
					default:[{"x is pacbio":10}, {"x is ont2d":10}, 1.5]}
			]},
			{line: [
				{int: "y", title: "seed occurence", desc: "seed occurrence for the 3rd round seeding",  default:20},
				{int: "c", title: "skip seeds", desc: "Discard a MEM (maximal exact match) if the seed has more than INT occurences in the genome. This is an insensitive parameter.",  default:500}
			]}
		]},
		{line: [
			{int: "w", title: "band width", desc: "Band width for banded alignment. Essentially, gaps longer than [x] will not be found. Note that the maximum gap length is also affected by the scoring matrix and the hit length, not solely determined by this option.", default:100},
			{int: "d", title: "Z-dropoff", desc: "Off-diagonal X-dropoff (Z-dropoff). Stop extension when the difference between the best and the current extension score is above |i-j|*A+INT, where i and j are the current positions of the query and reference, respectively, and A is the matching score. Z-dropoff is similar to BLAST’s X-dropoff except that it doesn’t penalize gaps in one of the sequences in the alignment. Z-dropoff not only avoids unnecessary extension, but also reduces poor alignments inside a long good alignment.", default:100}
		]},
		{float: "D", title: "min. chain length", desc: "drop chains shorter than INT fraction of the longest overlapping chain", default:0.50},
		{int: "W", title: "min. chain seed length", desc: "discard a chain if seeded bases shorter than [x]", 
			default:[{"x is pacbio":40}, {"x is ont2d":20}, 0]},
		{line: [
			{bool: "S", title: "skip mate rescue"},
			{int: "m", title: "or, max. rescue rounds", desc: "perform at most INT rounds of mate rescues for each read", default: 50, disable: "S"}
		]},
		{line: [
			{bool: "P", title: "skip pairing", desc: "In the paired-end mode, perform SW (Smith-Waterman algo) to rescue missing hits only but do not try to find hits that fit a proper pair. Mate rescue performed unless -S (skip mate rescue) also in use."},
			{bool: "e", title: "no full matches", desc: "discard full-length exact matches"}
		]}
	]},
	{group: "Scoring options", options: [
		{line: [
			{int: "A", title: "match score", desc: "score for a sequence match (scales options -T/d/B/O/E/L/U, unless overridden)", default: 1},
			{int: "B", title: "mismatch penalty", desc: "penalty for a mismatch", default: [{"x is pacbio":1}, {"x is ont2d":1}, {"x is intractg":9}, 4]}
		]},
		{line: true, merge: true, options:[
	    	{int: "O", title: "gap penalty for deletions", desc: "gap open penalty for deletions",
		    	default: [{"x is pacbio":1}, {"x is ont2d":1}, {"x is intractg":16}, 6]},
	    	{int: "O", title: "and insertions", desc: "gap open penalty for insertions", default: 6},
			{int: "E", title: "gap extension penalty for deletions", desc: "A gap of length k costs -O + k*-E (i.e. -O is for opening a zero-length gap).", default: 1},
			{int: "E", title: "and insertions", desc: "a gap of size k cost: -O + -E*k", default: 1},
			{int: "L", title: "Clipping penalty for 5'-end", default: [{"x is pacbio":0}, {"x is ont2d":0}, {"x is intractg":5}, 1]},
			{int: "L", title: "and 3'-end", default: 1},
			{info: "Clipping penalty. When performing SW extension, BWA-MEM keeps track of the best score reaching the end of query. If this score is larger than the best SW score minus the clipping penalty, clipping will not be applied. Note that in this case, the SAM AS tag reports the best SW score; clipping penalty is not deducted."}
		]},
		{int: "U", title: "penalty for an unpaired read pair", desc: "Penalty for an unpaired read pair. BWA-MEM scores an unpaired read pair as scoreRead1+scoreRead2-INT and scores a paired as scoreRead1+scoreRead2-insertPenalty. It compares these two scores to determine whether we should force pairing.", default: 17},
		{select: "read type", option: "x", desc:"This changes multiple parameters (-k/W/r/A/B/O/E/L) unless overridden", 
			selection: [{title:"PacBio", value:"pacbio"}, {title:"Oxford Nanopore 2D", value:"ont2d"}, {title:"intra-species contigs", value:"intractg"}]
		}
	]},
	{group: "Input/output options", options: [
		{bool: "p", title: "smart pairing", desc: "Assume the first input query file (reads file) is interleaved paired-end FASTA/Q (ignores the read mates file)."},
		{text: "R", title: "group header line", width: "auto", desc: "Complete group header line (such as '@RG\tID:foo\tSM:bar'). '\t' can be used in the header and will be converted to a TAB in the output SAM. The read group ID will be attached to every read in the output."},
		{line:[
			{text: "H", name: "insertTxt", width: "auto", title: "insert to header", desc: "insert this to header if it starts with @", disable: "insertFile"},
			"or",
			{file: "H", name: "insertFile", title: "insert lines", desc: "insert lines in the supplied file", disable: "insertTxt"}
		]},
		{bool: "j", title: "alt. contigs in primary", desc: "treat ALT contigs as part of the primary assembly (i.e. ignore reference.alt file)"},
		{select: "verbose level", option: "v", desc:"Amount of text to the log file",
			selection: [{title:"errors", value:1}, {title:"warnings", value:2}, {title:"messages", value:3, default: true}, {title:"debugging", value:4}]
		},
		{int: "T", title: "min. score", desc: "Don’t output alignment with score lower than INT.", default: 30},
		{line: [
			//-h INT[,INT]  if there are <INT hits with score >80% of the max score, output all in XA [0,0]
			{bool: "a", title: "output all", desc: "Output all found alignments for single-end or unpaired paired-end reads. These alignments will be flagged as secondary alignments."},
			{bool: "C", title: "append comment", desc: "Append append FASTA/Q comment to SAM output. This option can be used to transfer read meta information (e.g. barcode) to the SAM output. Note that the FASTA/Q comment (the string after a space in the header line) must conform the SAM spec (e.g. BC:Z:CGTAC). Malformated comments lead to incorrect SAM output."},
			{bool: "V", title: "output ref. header", desc: "output the reference FASTA header in the XR tag"}
		]},
		{line: [
			{bool: "Y", title: "soft clipping", desc: "use soft clipping for supplementary alignments"},
			{bool: "M", title: "secondary split hits", desc: "Mark shorter split hits as secondary (for Picard compatibility)."},
			{info: "The BWA-MEM algorithm performs local alignment. It may produce multiple primary alignments for different part of a query sequence. This is a crucial feature for long sequences. However, some tools such as Picard’s markDuplicates does not work with split alignments. One may consider to use option -M to flag shorter split hits as secondary."}
		]},
		{line: true, merge: true, options:[
	       {float:"I", title: "Insert size distribution:", default:"mean", desc: "FR orientation only. Values inferred by default."}, 
	       {float:"I", title: "", default:"σ", desc: "standard deviation (10% of the mean if absent)"},
	       {int:"I", title: "", default:"max", desc: "maximum (4 sigma from the mean if absent)"}, 
	       {int:"I", title: "", default:"min", desc: "minimum"}
		]}
    ]}	
]}

      